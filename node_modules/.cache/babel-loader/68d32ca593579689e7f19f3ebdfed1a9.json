{"ast":null,"code":"var _jsxFileName = \"/home/mariano/itunesapi/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport FormControl from '@material-ui/core/FormControl';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport clsx from 'clsx';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nconst styles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  }\n}));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.refArtist = React.createRef();\n    this.refAlbum = React.createRef();\n  }\n\n  render() {\n    const classes = this.props.classes;\n\n    const onClickBtn = () => {\n      if (this.refArtist.current !== '') {\n        axios.get('https://itunes.apple.com/search?term=' + this.refArtist.current + '&entity=allArtist&attribute=allArtist').then(response => {\n          console.log(response.data);\n        }).catch(error => {\n          console.log(error);\n        });\n      } else if (this.refAlbum !== '') {\n        axios.get('https://itunes.apple.com/search?term=' + this.refAlbum.current + '&entity=media&attribute=album').then(response => {\n          console.log(response.data);\n        }).catch(error => {\n          console.log(error);\n        });\n      }\n    };\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(Container, {\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"div\",\n      style: {\n        backgroundColor: '#cfe8fc',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Box, {\n      display: \"flex\",\n      p: 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"Search by artist:\", React.createElement(TextField, {\n      id: \"  \",\n      label: \"Artist\",\n      placeholder: \"Placeholder\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      refArtist: \"textInputArtist\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      type: \"submit\",\n      onClick: onClickBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Search by artist\")), React.createElement(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Search by album:\", React.createElement(TextField, {\n      id: \"outlined-with-placeholder\",\n      label: \"Album\",\n      placeholder: \"Placeholder\",\n      className: classes.textField,\n      margin: \"normal\",\n      variant: \"outlined\",\n      refAlbum: \"textInputAlbum\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      type: \"submit\",\n      onClick: onClickBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Search by album\")), \"Listar albums o artistas, (1), paginados (2)pantalla que muestre todos los albums de un artista (3)hacer pantalla que muestre todos los temas del album por album\")))));\n  }\n\n}\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/home/mariano/itunesapi/src/App.js"],"names":["React","useEffect","useState","Box","Toolbar","FormControl","CssBaseline","Typography","Container","clsx","makeStyles","withStyles","TextField","axios","Button","styles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","width","App","Component","constructor","props","refArtist","createRef","refAlbum","render","classes","onClickBtn","current","get","then","response","console","log","data","catch","error","backgroundColor","height","button"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport FormControl from '@material-ui/core/FormControl';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport clsx from 'clsx';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\n\nconst styles =\n  makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nclass App extends React.Component {\n   constructor(props) {\n     super(props);\n     this.refArtist = React.createRef();\n     this.refAlbum = React.createRef();\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    const onClickBtn = () => {\n      if(this.refArtist.current !== '')\n      {\n          axios.get('https://itunes.apple.com/search?term='+ this.refArtist.current +'&entity=allArtist&attribute=allArtist')\n            .then(response => {\n            console.log(response.data);\n            })\n          .catch(error => {\n            console.log(error);\n          });\n      }\n      else if(this.refAlbum !== '')\n      {\n          axios.get('https://itunes.apple.com/search?term='+ this.refAlbum.current +'&entity=media&attribute=album')\n            .then(response => {\n            console.log(response.data);\n            })\n          .catch(error => {\n            console.log(error);\n          });\n      }\n    };\n\n    return (\n        <React.Fragment>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }}>\n          <div style={{ width: '100%' }}>\n          <FormControl className={classes.container} noValidate autoComplete=\"off\">\n           <Box display=\"flex\" p={1}>\n            {\"Search by artist:\"}\n             <TextField\n              id=\"  \"\n              label=\"Artist\"\n              placeholder=\"Placeholder\"\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              refArtist=\"textInputArtist\"\n            />\n            <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\" onClick={onClickBtn}>Search by artist</Button>\n            </Box>\n            <Box>\n              {\"Search by album:\"}\n              <TextField\n                id=\"outlined-with-placeholder\"\n                label=\"Album\"\n                placeholder=\"Placeholder\"\n                className={classes.textField}\n                margin=\"normal\"\n                variant=\"outlined\"\n                refAlbum=\"textInputAlbum\"\n              />\n              <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\" onClick={onClickBtn}>Search by album</Button>\n            </Box>\n            Listar albums o artistas, (1), paginados\n            (2)pantalla que muestre todos los albums de un artista\n            (3)hacer pantalla que muestre todos los temas del album por album\n         </FormControl>\n         </div>\n         </Typography>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);"]},"metadata":{},"sourceType":"module"}