{"ast":null,"code":"import _objectSpread from \"/home/mariano/itunesapi/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/mariano/itunesapi/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mariano/itunesapi/src/App.js\";\nimport React, { useEffect } from 'react';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  }\n}));\n\nfunction App() {\n  const _React$useState = React.useState({\n    album: '',\n    artist: ''\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        values = _React$useState2[0],\n        setValues = _React$useState2[1];\n\n  useEffect(values => {\n    return () => {};\n  }, [values]);\n  const classes = useStyles();\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Container, {\n    maxWidth: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"div\",\n    style: {\n      backgroundColor: '#cfe8fc',\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(Box, {\n    display: \"flex\",\n    p: 1,\n    bgColor: \"background.paper\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Búsqueda por artista:\", React.createElement(TextField, {\n    id: \"outlined-with-placeholder\",\n    label: \"Artista\",\n    placeholder: \"Placeholder\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    onChange: handleChange('artista'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), \"Búsqueda por album:\", React.createElement(TextField, {\n    id: \"outlined-with-placeholder\",\n    label: \"Album\",\n    placeholder: \"Placeholder\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    onChange: handleChange('album'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), \"Listar albums o artistas, (1), paginados (2)pantalla que muestre todos los albums de un artista (3)hacer pantalla que muestre todos los temas del album por album\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/home/mariano/itunesapi/src/App.js"],"names":["React","useEffect","Box","CssBaseline","Typography","Container","clsx","makeStyles","TextField","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","width","App","useState","album","artist","values","setValues","classes","handleChange","name","event","target","value","backgroundColor","height"],"mappings":"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","sourcesContent":["import React, {useEffect} from 'react';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\n\n\nfunction App() {\n  const [values, setValues] = React.useState({\n    album: '',\n    artist: '', \n  });\n\n  useEffect((values) => {\n  \n    return () => {\n    \n  };\n}, [values]);\n\n  const classes = useStyles();\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n      <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }} />\n        <div style={{ width: '100%' }}>\n        <Box display=\"flex\" p={1} bgColor=\"background.paper\">\n          {\"Búsqueda por artista:\"}\n           <TextField\n            id=\"outlined-with-placeholder\"\n            label=\"Artista\"\n            placeholder=\"Placeholder\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={handleChange('artista')}\n          />\n\n           {\"Búsqueda por album:\"}\n           <TextField\n            id=\"outlined-with-placeholder\"\n            label=\"Album\"\n            placeholder=\"Placeholder\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={handleChange('album')}\n          />\n\n          Listar albums o artistas, (1), paginados\n          (2)pantalla que muestre todos los albums de un artista\n          (3)hacer pantalla que muestre todos los temas del album por album\n        </Box>\n       </div>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}