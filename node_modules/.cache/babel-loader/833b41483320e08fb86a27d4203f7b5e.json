{"ast":null,"code":"import _slicedToArray from \"/home/mariano/itunesapidemo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mariano/itunesapidemo/src/searchResults.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePaginationActions from './TablePaginationActions';\nimport PropTypes from 'prop-types';\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  table: {\n    minWidth: 500\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  }\n}));\nexport default function SearchResults(props) {\n  const rows = Array.from(props.rows);\n  const classes = useStyles2();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(5),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => React.createElement(TableRow, {\n    key: row.wrapperType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, row.wrapperType), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, row.artistName), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, row.kind))), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 48 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))), React.createElement(TableFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }))))));\n}\nSearchResults.propTypes = {\n  rows: PropTypes.array\n};","map":{"version":3,"sources":["/home/mariano/itunesapidemo/src/searchResults.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableFooter","TablePagination","TableRow","Paper","TablePaginationActions","PropTypes","useStyles2","theme","root","width","marginTop","spacing","table","minWidth","tableWrapper","overflowX","SearchResults","props","rows","Array","from","classes","useState","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","slice","map","row","wrapperType","artistName","kind","height","inputProps","native","propTypes","array"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport TablePaginationActions from './TablePaginationActions';\nimport PropTypes from 'prop-types'\n\nconst useStyles2 = makeStyles(theme => ({\n    root: {\n      width: '100%',\n      marginTop: theme.spacing(3),\n    },\n    table: {\n      minWidth: 500,\n    },\n    tableWrapper: {\n      overflowX: 'auto',\n    },\n  }));\n  \n  \n  export default function SearchResults(props) {\n    const rows = Array.from(props.rows);\n    const classes = useStyles2();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    function handleChangePage(event, newPage) {\n      setPage(newPage);\n    }\n\n    function handleChangeRowsPerPage(event) {\n      setRowsPerPage(parseInt(event.target.value, 10));\n      setPage(0);\n    }\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table}>\n            <TableBody>\n              {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n                <TableRow key={row.wrapperType}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {row.wrapperType}\n                  </TableCell>\n                  <TableCell align=\"right\">{row.artistName}</TableCell>\n                  <TableCell align=\"right\">{row.kind}</TableCell>\n                </TableRow>\n              ))}\n  \n              {emptyRows > 0 && (\n                <TableRow style={{ height: 48 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                <TablePagination\n                  rowsPerPageOptions={[5, 10, 25]}\n                  colSpan={3}\n                  count={rows.length}\n                  rowsPerPage={rowsPerPage}\n                  page={page}\n                  SelectProps={{\n                    inputProps: { 'aria-label': 'rows per page' },\n                    native: true,\n                  }}\n                  onChangePage={handleChangePage}\n                  onChangeRowsPerPage={handleChangeRowsPerPage}\n                  ActionsComponent={TablePaginationActions}\n                />\n              </TableRow>\n            </TableFooter>\n          </Table>\n        </div>\n      </Paper>\n    );\n  }\n  \n  SearchResults.propTypes = {\n    rows: PropTypes.array\n  };"]},"metadata":{},"sourceType":"module"}