{"ast":null,"code":"import _slicedToArray from \"/home/mariano/itunesapi/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mariano/itunesapi/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport FormControl from '@material-ui/core/FormControl';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport clsx from 'clsx';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  }\n}));\n\nfunction App() {\n  const _useState = useState({\n    artist: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        artist = _useState2[0],\n        setArtist = _useState2[1];\n\n  const _useState3 = useState({\n    album: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        album = _useState4[0],\n        setAlbum = _useState4[1];\n\n  const classes = useStyles();\n\n  const handleChangeArtist = name => event => {\n    setArtist({\n      artist: event.target.value\n    });\n  };\n\n  const handleChangeAlbum = name => event => {\n    setAlbum({\n      album: event.target.value\n    });\n  }; //\n\n\n  let textInputArtist = React.createRef();\n  let textInputAlbum = React.createRef();\n\n  const onClickBtn = () => {\n    if (textInputArtist.current !== '') {\n      axios.get('https://itunes.apple.com/search?term=' + album + '&entity=allArtist&attribute=allArtist').then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    } else if (textInputAlbum !== '') {\n      axios.get('https://itunes.apple.com/search?term=' + artist + '&entity=media&attribute=album').then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }; // useEffect(() => {\n  // },[values]);\n\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Container, {\n    maxWidth: \"sm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    component: \"div\",\n    style: {\n      backgroundColor: '#cfe8fc',\n      height: '100vh'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Box, {\n    display: \"flex\",\n    p: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Search by artist:\", React.createElement(TextField, {\n    id: \"  \",\n    label: \"Artist\",\n    placeholder: \"Placeholder\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    onChange: handleChangeArtist,\n    ref: \"textInputArtist\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    type: \"submit\",\n    onClick: onClickBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Search by artist\")), React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, \"Search by album:\", React.createElement(TextField, {\n    id: \"outlined-with-placeholder\",\n    label: \"Album\",\n    placeholder: \"Placeholder\",\n    className: classes.textField,\n    margin: \"normal\",\n    variant: \"outlined\",\n    onChange: handleChangeAlbum,\n    ref: \"textInputAlbum\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    type: \"submit\",\n    onClick: onClickBtn,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }, \"Search by album\")), \"Listar albums o artistas, (1), paginados (2)pantalla que muestre todos los albums de un artista (3)hacer pantalla que muestre todos los temas del album por album\")))));\n}\n\nexport default withStyles(useStyles)(App);","map":{"version":3,"sources":["/home/mariano/itunesapi/src/App.js"],"names":["React","useEffect","useState","Box","Toolbar","FormControl","CssBaseline","Typography","Container","clsx","makeStyles","withStyles","TextField","axios","Button","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","dense","marginTop","menu","width","App","artist","setArtist","album","setAlbum","classes","handleChangeArtist","name","event","target","value","handleChangeAlbum","textInputArtist","createRef","textInputAlbum","onClickBtn","current","get","then","response","console","log","data","catch","error","backgroundColor","height","button"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport FormControl from '@material-ui/core/FormControl';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport clsx from 'clsx';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\n\nfunction App() {\n  const [artist, setArtist] = useState({\n    artist: '', \n  });\n\n  const [album, setAlbum] = useState({\n   album: '',\n  });\n\n  const classes = useStyles();\n  const handleChangeArtist = name => event => {\n    setArtist({artist: event.target.value });\n  };\n\n  const handleChangeAlbum = name => event => {\n    setAlbum({album: event.target.value });\n  };\n  \n  //\n  let textInputArtist = React.createRef();\n  let textInputAlbum = React.createRef();\n\n  const onClickBtn = () => {\n    if(textInputArtist.current !== '')\n    {\n        axios.get('https://itunes.apple.com/search?term='+ album +'&entity=allArtist&attribute=allArtist')\n          .then(response => {\n          console.log(response.data);\n          })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n    else if(textInputAlbum !== '')\n    {\n        axios.get('https://itunes.apple.com/search?term='+ artist +'&entity=media&attribute=album')\n          .then(response => {\n          console.log(response.data);\n          })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  };\n\n  // useEffect(() => {\n  // },[values]);\n\n  return (\n      <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"sm\">\n        <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }}>\n        <div style={{ width: '100%' }}>\n        <FormControl className={classes.container} noValidate autoComplete=\"off\">\n         <Box display=\"flex\" p={1}>\n          {\"Search by artist:\"}\n           <TextField\n            id=\"  \"\n            label=\"Artist\"\n            placeholder=\"Placeholder\"\n            className={classes.textField}\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={handleChangeArtist}\n            ref=\"textInputArtist\" \n          />\n          <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\" onClick={onClickBtn}>Search by artist</Button>\n          </Box>\n          <Box>\n            {\"Search by album:\"}\n            <TextField\n              id=\"outlined-with-placeholder\"\n              label=\"Album\"\n              placeholder=\"Placeholder\"\n              className={classes.textField}\n              margin=\"normal\"\n              variant=\"outlined\"\n              onChange={handleChangeAlbum}\n              ref=\"textInputAlbum\"\n            />\n            <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\" onClick={onClickBtn}>Search by album</Button>\n          </Box>\n          Listar albums o artistas, (1), paginados\n          (2)pantalla que muestre todos los albums de un artista\n          (3)hacer pantalla que muestre todos los temas del album por album\n       </FormControl>\n       </div>\n       </Typography>\n      </Container>\n    </React.Fragment>\n  );\n}\n\nexport default withStyles(useStyles)(App);"]},"metadata":{},"sourceType":"module"}