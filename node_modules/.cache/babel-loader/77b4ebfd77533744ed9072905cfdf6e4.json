{"ast":null,"code":"import _slicedToArray from \"/home/mariano/itunesapi/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/mariano/itunesapi/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nlet rows = [];\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5)\n  }\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage,\n        onChangePage = props.onChangePage;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    onClick: handleFirstPageButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"first page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(LastPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }) : React.createElement(FirstPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    \"aria-label\": \"previous page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleNextButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"next page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(KeyboardArrowLeft, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }) : React.createElement(KeyboardArrowRight, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  })), React.createElement(IconButton, {\n    onClick: handleLastPageButtonClick,\n    disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n    \"aria-label\": \"last page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, theme.direction === 'rtl' ? React.createElement(FirstPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }) : React.createElement(LastPageIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })));\n}\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3)\n  },\n  table: {\n    minWidth: 500\n  },\n  tableWrapper: {\n    overflowX: 'auto'\n  }\n}));\n\nfunction CustomPaginationActionsTable() {\n  const classes = useStyles2();\n\n  const _React$useState = React.useState(0),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        page = _React$useState2[0],\n        setPage = _React$useState2[1];\n\n  const _React$useState3 = React.useState(5),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        rowsPerPage = _React$useState4[0],\n        setRowsPerPage = _React$useState4[1];\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.tableWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Table, {\n    className: classes.table,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(TableBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => React.createElement(TableRow, {\n    key: row.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, row.name), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, row.calories), React.createElement(TableCell, {\n    align: \"right\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, row.fat))), emptyRows > 0 && React.createElement(TableRow, {\n    style: {\n      height: 48 * emptyRows\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(TableCell, {\n    colSpan: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }))), React.createElement(TableFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 25],\n    colSpan: 3,\n    count: rows.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    SelectProps: {\n      inputProps: {\n        'aria-label': 'rows per page'\n      },\n      native: true\n    },\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    ActionsComponent: TablePaginationActions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }))))));\n}\n\nconst styles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  }\n}));\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onClickBtn = this.onClickBtn.bind(this);\n    this.textInputArtist = React.createRef();\n    this.textInputAlbum = React.createRef();\n  }\n\n  onClickBtn() {\n    const artist = this.textInputArtist.current.value;\n    const album = this.textInputAlbum.current.value;\n\n    if (artist !== '') {\n      axios.get('https://itunes.apple.com/search?term=' + this.textInputArtist.current.value + '&entity=album&media=music&attribute=artistTerm').then(response => {\n        //console.log(response.data);\n        rows = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    } else if (album !== '') {\n      axios.get('https://itunes.apple.com/search?term=' + this.textInputAlbum.current.value + '&entity=album&media=music&attribute=albumTerm').then(response => {\n        //console.log(response.data);\n        rows = response.data;\n      }).catch(error => {\n        console.log(error);\n      });\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221\n      },\n      __self: this\n    }, React.createElement(CssBaseline, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222\n      },\n      __self: this\n    }), React.createElement(Container, {\n      maxWidth: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      component: \"div\",\n      style: {\n        backgroundColor: '#cfe8fc',\n        height: '100vh'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        width: '100%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225\n      },\n      __self: this\n    }, React.createElement(FormControl, {\n      className: classes.container,\n      noValidate: true,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }, React.createElement(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Search by artist:\", React.createElement(\"input\", {\n      id: \"artistinput\",\n      type: \"text\",\n      ref: this.textInputArtist,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      type: \"submit\",\n      onClick: this.onClickBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234\n      },\n      __self: this\n    }, \"Search by artist\")), React.createElement(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, \"Search by album:\", React.createElement(\"input\", {\n      id: \"albuminput\",\n      type: \"text\",\n      ref: this.textInputAlbum,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      className: classes.button,\n      type: \"submit\",\n      onClick: this.onClickBtn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, \"Search by album\")), React.createElement(Box, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(CustomPaginationActionsTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    })), \"(2)pantalla que muestre todos los albums de un artista (3)hacer pantalla que muestre todos los temas del album por album\")))));\n  }\n\n}\n\nexport default withStyles(styles)(App);","map":{"version":3,"sources":["/home/mariano/itunesapi/src/App.js"],"names":["React","Box","Toolbar","FormControl","IconButton","CssBaseline","Typography","Container","makeStyles","withStyles","useTheme","axios","Button","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","Paper","Table","TableBody","TableCell","TableFooter","TablePagination","TableRow","rows","useStyles1","theme","root","flexShrink","color","palette","text","secondary","marginLeft","spacing","TablePaginationActions","props","classes","count","page","rowsPerPage","onChangePage","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","direction","useStyles2","width","marginTop","table","minWidth","tableWrapper","overflowX","CustomPaginationActionsTable","useState","setPage","setRowsPerPage","emptyRows","min","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","slice","map","row","name","calories","fat","height","inputProps","native","styles","container","display","flexWrap","textField","marginRight","dense","menu","App","Component","constructor","onClickBtn","bind","textInputArtist","createRef","textInputAlbum","artist","current","album","get","then","response","data","catch","error","console","log","render","backgroundColor","button"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Box from '@material-ui/core/Box';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport FormControl from '@material-ui/core/FormControl';\nimport IconButton from '@material-ui/core/IconButton';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';  \nimport { makeStyles, withStyles, useTheme } from '@material-ui/core/styles';\nimport axios from 'axios';\nimport { Button } from '@material-ui/core';\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\n\nlet rows = [];\n\nconst useStyles1 = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    color: theme.palette.text.secondary,\n    marginLeft: theme.spacing(2.5),\n  },\n}));\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles1();\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onChangePage } = props;\n\n  function handleFirstPageButtonClick(event) {\n    onChangePage(event, 0);\n  }\n\n  function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n  }\n\n  function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n  }\n\n  function handleLastPageButtonClick(event) {\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </div>\n  );\n}\n\nconst useStyles2 = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n  },\n  table: {\n    minWidth: 500,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n}));\n\n\nfunction CustomPaginationActionsTable() {\n  const classes = useStyles2();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  function handleChangePage(event, newPage) {\n    setPage(newPage);\n  }\n\n  function handleChangeRowsPerPage(event) {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  }\n\n  return (\n    <Paper className={classes.root}>\n      <div className={classes.tableWrapper}>\n        <Table className={classes.table}>\n          <TableBody>\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => (\n              <TableRow key={row.name}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"right\">{row.calories}</TableCell>\n                <TableCell align=\"right\">{row.fat}</TableCell>\n              </TableRow>\n            ))}\n\n            {emptyRows > 0 && (\n              <TableRow style={{ height: 48 * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n          <TableFooter>\n            <TableRow>\n              <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                colSpan={3}\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                SelectProps={{\n                  inputProps: { 'aria-label': 'rows per page' },\n                  native: true,\n                }}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n                ActionsComponent={TablePaginationActions}\n              />\n            </TableRow>\n          </TableFooter>\n        </Table>\n      </div>\n    </Paper>\n  );\n}\n\n\nconst styles =\n  makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  dense: {\n    marginTop: theme.spacing(2),\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nclass App extends React.Component {\n   constructor(props) {\n     super(props);\n     this.onClickBtn = this.onClickBtn.bind(this);\n     this.textInputArtist = React.createRef();\n     this.textInputAlbum = React.createRef();\n  }\n\n  onClickBtn() {\n    const artist = this.textInputArtist.current.value;\n    const album = this.textInputAlbum.current.value;\n\n    if(artist !== '')\n    {\n        axios.get('https://itunes.apple.com/search?term='+ this.textInputArtist.current.value +'&entity=album&media=music&attribute=artistTerm')\n        .then(response => {\n          //console.log(response.data);\n          rows = response.data;\n          })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n    else if(album !== '')\n    {\n        axios.get('https://itunes.apple.com/search?term='+ this.textInputAlbum.current.value +'&entity=album&media=music&attribute=albumTerm')  \n          .then(response => {\n          //console.log(response.data);\n          rows = response.data;\n          })\n        .catch(error => {\n          console.log(error);\n        });\n    }\n  };\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n        <React.Fragment>\n        <CssBaseline />\n        <Container maxWidth=\"sm\">\n          <Typography component=\"div\" style={{ backgroundColor: '#cfe8fc', height: '100vh' }}>\n          <div style={{ width: '100%' }}>\n          <FormControl className={classes.container} noValidate autoComplete=\"off\">\n           <Box>\n            {\"Search by artist:\"}\n             <input\n              id=\"artistinput\"\n              type=\"text\"\n              ref={this.textInputArtist}\n            />\n            <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\" onClick={this.onClickBtn}>Search by artist</Button>\n            </Box>\n            <Box>\n              {\"Search by album:\"}\n              <input\n                id=\"albuminput\"\n                type=\"text\"\n                ref={this.textInputAlbum}\n              />\n              <Button variant=\"contained\" color=\"primary\" className={classes.button} type=\"submit\" onClick={this.onClickBtn}>Search by album</Button>\n            </Box>\n            <Box>\n              <CustomPaginationActionsTable />\n            </Box>  \n            (2)pantalla que muestre todos los albums de un artista\n            (3)hacer pantalla que muestre todos los temas del album por album\n         </FormControl>\n         </div>\n         </Typography>\n        </Container>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);"]},"metadata":{},"sourceType":"module"}